name: Python application

on:
  push:
    branches: [master]
  pull_request:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      # - name: Run tests
      #   env:
      #     APP_ENV: TEST
      #     STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      #   run: |
      #     make qa
      - id: check_version
        name: Check version for possible tagging
        run: |
          echo dummy > dummy
          echo '::echo::on'
          echo 'MONO_VERSION=$(pipenv run cz version --project)' >> $GITHUB_ENV
      # - name: Commit changes
      #   uses: EndBug/add-and-commit@v8
      #   with:
      #     default_author: github_actions
      #     message: 'Update changes made by Github Actions'
      #     add: '.'
      #     tag: ${pipenv run cz version --project}
      - name: Commit dummy
        run: | 
          git config --global user.name 'Github Actions'
          git config --global user.email ''
          git add .
          git fetch --tags -f
          git commit -am "Automated commit"
          if [[ $(git ls-remote origin refs/tags/$(pipenv run cz version --project)) ]]; then
            git push
          else
            git tag $(pipenv run cz version --project)
            git push --tags
          fi
