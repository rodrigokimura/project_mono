# Generated by Django 4.2.5 on 2023-09-20 19:19

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CoverageReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("coverage_version", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Coverage Report",
                "verbose_name_plural": "Coverage Reports",
            },
        ),
        migrations.CreateModel(
            name="PullRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        help_text="GitHub unique identifier.", unique=True
                    ),
                ),
                (
                    "author",
                    models.CharField(
                        help_text="Login username that triggered the pull request.",
                        max_length=100,
                    ),
                ),
                (
                    "last_commit_sha",
                    models.CharField(
                        blank=True,
                        help_text="SHA of the last commit.",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("commits", models.IntegerField(default=0)),
                ("additions", models.IntegerField(default=0)),
                ("deletions", models.IntegerField(default=0)),
                ("changed_files", models.IntegerField(default=0)),
                (
                    "merged_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pulled_at",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="Set when pull method runs.",
                        null=True,
                    ),
                ),
                (
                    "deployed_at",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="Set when deploy method runs.",
                        null=True,
                    ),
                ),
                (
                    "migrations",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
            ],
            options={
                "verbose_name": "Pull Request",
                "verbose_name_plural": "Pull Requests",
                "get_latest_by": "number",
            },
        ),
        migrations.CreateModel(
            name="PylintReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MaxValueValidator(10)
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pull_request",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="healthcheck.pullrequest",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pylint Report",
                "verbose_name_plural": "Pylint Reports",
            },
        ),
        migrations.CreateModel(
            name="PytestReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pytest_version", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pull_request",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="healthcheck.pullrequest",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pytest Report",
                "verbose_name_plural": "Pytest Reports",
            },
        ),
        migrations.CreateModel(
            name="PytestResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "node_id",
                    models.CharField(
                        help_text="Test unique identifier.", max_length=2000
                    ),
                ),
                ("duration", models.DurationField(help_text="Test duration.")),
                (
                    "outcome",
                    models.CharField(
                        choices=[("passed", "Passed"), ("failed", "Failed")],
                        help_text="Test outcome.",
                        max_length=6,
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="healthcheck.pytestreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pytest Result",
                "verbose_name_plural": "Pytest Results",
            },
        ),
        migrations.CreateModel(
            name="PylintResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(help_text="File name.", max_length=50),
                ),
                (
                    "module",
                    models.CharField(help_text="Module name.", max_length=1000),
                ),
                (
                    "obj",
                    models.CharField(
                        help_text="Object within the module (if any).",
                        max_length=1000,
                    ),
                ),
                (
                    "line",
                    models.PositiveIntegerField(
                        help_text="Line number.", null=True
                    ),
                ),
                (
                    "column",
                    models.PositiveIntegerField(
                        help_text="Column number.", null=True
                    ),
                ),
                (
                    "end_line",
                    models.PositiveIntegerField(
                        help_text="Line number of the end of the node.",
                        null=True,
                    ),
                ),
                (
                    "end_column",
                    models.PositiveIntegerField(
                        help_text="Column number of the end of the node.",
                        null=True,
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        help_text="Relative path to the file.", max_length=1000
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        help_text="Symbolic name of the message.", max_length=50
                    ),
                ),
                ("message", models.TextField(help_text="Text of the message.")),
                (
                    "message_id",
                    models.CharField(help_text="Message code.", max_length=10),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="healthcheck.pylintreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pylint Result",
                "verbose_name_plural": "Pylint Results",
            },
        ),
        migrations.CreateModel(
            name="CoverageResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.CharField(help_text="File name.", max_length=2000),
                ),
                ("covered_lines", models.PositiveIntegerField()),
                ("missing_lines", models.PositiveIntegerField()),
                ("excluded_lines", models.PositiveIntegerField()),
                ("num_statements", models.PositiveIntegerField()),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="healthcheck.coveragereport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Coverage Result",
                "verbose_name_plural": "Coverage Results",
            },
        ),
        migrations.AddField(
            model_name="coveragereport",
            name="pull_request",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="healthcheck.pullrequest",
            ),
        ),
    ]
