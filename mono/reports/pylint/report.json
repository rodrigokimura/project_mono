[
    {
        "type": "convention",
        "module": "finance.models",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/finance/models.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1282/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "finance.views",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/finance/views.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1144/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "",
        "line": 143,
        "column": 33,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/models.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "",
        "line": 147,
        "column": 38,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/models.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "",
        "line": 201,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/models.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "PytestReport.process_report_file",
        "line": 132,
        "column": 4,
        "endLine": 132,
        "endColumn": 27,
        "path": "mono/healthcheck/models.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "PytestReport.process_report_file",
        "line": 138,
        "column": 8,
        "endLine": 138,
        "endColumn": 9,
        "path": "mono/healthcheck/models.py",
        "symbol": "invalid-name",
        "message": "Variable name \"g\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "PytestReport.process_report_file",
        "line": 141,
        "column": 12,
        "endLine": 141,
        "endColumn": 13,
        "path": "mono/healthcheck/models.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "PytestReport.process_report_file",
        "line": 144,
        "column": 16,
        "endLine": 144,
        "endColumn": 17,
        "path": "mono/healthcheck/models.py",
        "symbol": "invalid-name",
        "message": "Variable name \"r\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "CoverageReport",
        "line": 175,
        "column": 0,
        "endLine": 175,
        "endColumn": 20,
        "path": "mono/healthcheck/models.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "CoverageReport.process_file",
        "line": 181,
        "column": 4,
        "endLine": 181,
        "endColumn": 20,
        "path": "mono/healthcheck/models.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "healthcheck.models",
        "obj": "CoverageReport.process_file",
        "line": 184,
        "column": 8,
        "endLine": 184,
        "endColumn": 17,
        "path": "mono/healthcheck/models.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'timestamp'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "CoverageResult",
        "line": 204,
        "column": 0,
        "endLine": 204,
        "endColumn": 20,
        "path": "mono/healthcheck/models.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 11,
        "path": "mono/healthcheck/models.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"import json\" should be placed before \"import git\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 31,
        "path": "mono/healthcheck/models.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"from collections import Counter\" should be placed before \"import git\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "healthcheck.models",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 29,
        "path": "mono/healthcheck/models.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"from itertools import groupby\" should be placed before \"import git\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "",
        "line": 251,
        "column": 7,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/views.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "",
        "line": 251,
        "column": 7,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/views.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "",
        "line": 254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/views.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "",
        "line": 284,
        "column": 7,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/views.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "",
        "line": 284,
        "column": 7,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/views.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "",
        "line": 287,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/healthcheck/views.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "healthcheck.views",
        "obj": "ChangelogView.get",
        "line": 239,
        "column": 13,
        "endLine": 239,
        "endColumn": 38,
        "path": "mono/healthcheck/views.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "ChangelogView.get",
        "line": 239,
        "column": 42,
        "endLine": 239,
        "endColumn": 43,
        "path": "mono/healthcheck/views.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "healthcheck.views",
        "obj": "ChangelogView.get",
        "line": 240,
        "column": 12,
        "endLine": 240,
        "endColumn": 14,
        "path": "mono/healthcheck/views.py",
        "symbol": "invalid-name",
        "message": "Variable name \"md\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "healthcheck.views",
        "obj": "PytestReportViewSet.list",
        "line": 258,
        "column": 4,
        "endLine": 258,
        "endColumn": 12,
        "path": "mono/healthcheck/views.py",
        "symbol": "no-self-use",
        "message": "Method could be a function",
        "message-id": "R0201"
    },
    {
        "type": "refactor",
        "module": "healthcheck.views",
        "obj": "PytestReportViewSet.create",
        "line": 274,
        "column": 4,
        "endLine": 274,
        "endColumn": 14,
        "path": "mono/healthcheck/views.py",
        "symbol": "no-self-use",
        "message": "Method could be a function",
        "message-id": "R0201"
    },
    {
        "type": "refactor",
        "module": "healthcheck.views",
        "obj": "CoverageReportViewSet.list",
        "line": 291,
        "column": 4,
        "endLine": 291,
        "endColumn": 12,
        "path": "mono/healthcheck/views.py",
        "symbol": "no-self-use",
        "message": "Method could be a function",
        "message-id": "R0201"
    },
    {
        "type": "refactor",
        "module": "healthcheck.views",
        "obj": "CoverageReportViewSet.create",
        "line": 309,
        "column": 4,
        "endLine": 309,
        "endColumn": 14,
        "path": "mono/healthcheck/views.py",
        "symbol": "no-self-use",
        "message": "Method could be a function",
        "message-id": "R0201"
    },
    {
        "type": "warning",
        "module": "healthcheck.views",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 43,
        "path": "mono/healthcheck/views.py",
        "symbol": "unused-import",
        "message": "Unused generics imported from rest_framework",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "healthcheck.views",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 77,
        "path": "mono/healthcheck/views.py",
        "symbol": "unused-import",
        "message": "Unused CoverageResult imported from models",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "healthcheck.serializers",
        "obj": "ReportSerializer",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 22,
        "path": "mono/healthcheck/serializers.py",
        "symbol": "abstract-method",
        "message": "Method 'create' is abstract in class 'BaseSerializer' but is not overridden",
        "message-id": "W0223"
    },
    {
        "type": "warning",
        "module": "healthcheck.serializers",
        "obj": "ReportSerializer",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 22,
        "path": "mono/healthcheck/serializers.py",
        "symbol": "abstract-method",
        "message": "Method 'update' is abstract in class 'BaseSerializer' but is not overridden",
        "message-id": "W0223"
    },
    {
        "type": "convention",
        "module": "notes.views",
        "obj": "",
        "line": 159,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/notes/views.py",
        "symbol": "trailing-newlines",
        "message": "Trailing newlines",
        "message-id": "C0305"
    },
    {
        "type": "warning",
        "module": "notes.views",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 49,
        "path": "mono/notes/views.py",
        "symbol": "unused-import",
        "message": "Unused gettext imported from django.utils.translation as _",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "notes.serializers",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/notes/serializers.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "convention",
        "module": "notes.serializers",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/notes/serializers.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "notes.serializers",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": 1,
        "endColumn": 46,
        "path": "mono/notes/serializers.py",
        "symbol": "unused-import",
        "message": "Unused fields imported from rest_framework",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "project_manager.admin",
        "obj": "ProjectAdmin.sort",
        "line": 17,
        "column": 4,
        "endLine": 17,
        "endColumn": 12,
        "path": "mono/project_manager/admin.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "project_manager.admin",
        "obj": "ProjectAdmin.sort",
        "line": 18,
        "column": 12,
        "endLine": 18,
        "endColumn": 13,
        "path": "mono/project_manager/admin.py",
        "symbol": "invalid-name",
        "message": "Variable name \"p\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "project_manager.admin",
        "obj": "ProjectAdmin.sort",
        "line": 17,
        "column": 4,
        "endLine": 17,
        "endColumn": 12,
        "path": "mono/project_manager/admin.py",
        "symbol": "no-self-use",
        "message": "Method could be a function",
        "message-id": "R0201"
    },
    {
        "type": "convention",
        "module": "project_manager.views",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "mono/project_manager/views.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1465/1000)",
        "message-id": "C0302"
    }
]
