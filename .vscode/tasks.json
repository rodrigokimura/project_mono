{
	"version": "2.0.0",
	"tasks": [
		{
			"type": "shell",
			"label": "Pip freeze",
			"command": "source ${workspaceFolder}/venv/bin/activate; pip freeze > requirements.txt; echo Requirements updated",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Django - Make migrations",
			"command": "export APP_ENV=DEV; pipenv run python mono/manage.py makemigrations",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Django - Migrate",
			"command": "export APP_ENV=DEV; pipenv run python mono/manage.py migrate",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Django - Run tests",
			"group": "test",
			"command": "export APP_ENV=TEST; cd mono; pipenv run python manage.py test --parallel 12 --failfast",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Django - Coverage XML",
			"group": "test",
			"command": "export APP_ENV=TEST; cd mono; pipenv run coverage run --source='.' manage.py test -b --timing; pipenv run coverage xml -o reports/coverage/coverage.xml;",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Flake8",
			"group": "test",
			"command": "export APP_ENV=TEST; cd mono; pipenv run flake8 --statistics --tee --output-file reports/flake8/flake8stats.txt",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Django - Coverage",
			"group": "test",
			"command": "export APP_ENV=TEST; cd mono; pipenv run coverage run --source='.' manage.py test -b --timing; pipenv run coverage html -d reports/coverage/; firefox reports/coverage/index.html;",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Django - Collect Static Files",
			"command": "pipenv run python mono/manage.py collectstatic --noinput",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Django - Full Build",
			"group": "build",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Django - Make migrations",
				"Django - Migrate",
			],
			"presentation": {
				"reveal": "always",
				"panel": "new"
			}
		}
	]
}